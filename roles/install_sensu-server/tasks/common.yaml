---
- name: add the official Sensu repository's key
  apt_key: url=http://repos.sensuapp.org/apt/pubkey.gpg state=present

- name: add the official Sensu repository
  copy:
    src=aptrepo_sensu-server.list
    dest=/etc/apt/sources.list.d/
    backup=yes
  register: aptrepo

- name: refresh apt cache
  apt: update_cache=yes
  when: aptrepo.changed

- name: install sensu
  apt: name=sensu state=present

- name: set which Ruby to use
  lineinfile:
    dest=/etc/default/sensu
    regexp: ^EMBEDDED_RUBY=
    line: EMBEDDED_RUBY={{ sensu_embedded_ruby }}

- name: install ruby 
  apt: name=ruby state=present    

- name: install ruby-dev
  apt: name=ruby-dev state=present 

- name: install build-essential
  apt: name=build-essential state=present

- name: create the conf.d/checks directory
  file:
    path: /etc/sensu/conf.d/checks
    owner: "{{ sensu_user }}"
    group: "{{ sensu_group }}"
    mode: "u=rwx,g=rx,o=rx"
    state: directory

- name: create the standard system checks directory conf.d/checks/standard-system-checks
  file:
    path: /etc/sensu/conf.d/checks/standard-system-checks
    owner: "{{ sensu_user }}"
    group: "{{ sensu_group }}"
    mode: "u=rwx,g=rx,o=rx"
    state: directory

- name: create the conf.d/clients directory
  file:
    path: /etc/sensu/conf.d/clients
    owner: "{{ sensu_user }}"
    group: "{{ sensu_group }}"
    mode: "u=rwx,g=rx,o=rx"
    state: directory

- name: create the conf.d/sensu-framework directory
  file:
    path: /etc/sensu/conf.d/sensu-framework
    owner: "{{ sensu_user }}"
    group: "{{ sensu_group }}"
    mode: "u=rwx,g=rx,o=rx"
    state: directory

- name: create the SSL directory
  file:
    path: /etc/sensu/ssl
    owner: "{{ sensu_user }}"
    group: "{{ sensu_group }}"
    mode: "u=rwx,g=rx,o=rx"
    state: directory
  when: not sensu_server_rabbitmq_insecure


#WARNING : Cert+key must be present on the new sensu-server. Previously, A scp script to strongbox had copied cert+key to ansible/{{ sensu_cert_dir }}/{{ item }}

- name: copy the SSL certificate & key
  copy:
    src: {{ sensu_cert_dir }}/{{ item }}
    dest: /etc/sensu/ssl/{{ item }}
    owner: "{{ sensu_user }}"
    group: "{{ sensu_group }}"
    mode: 0640
    backup: yes
  with_items:
    - "{{ sensu_cert_file_name }}"
    - "{{ sensu_key_file_name }}"
  when: sensu_server_rabbitmq_secure
  notify:
    - restart sensu server
    - restart sensu client

- name: generate rabbitmq.json
  template:
    src: rabbitmq.json.j2
    dest: /etc/sensu/conf.d/rabbitmq.json
    owner: sensu
    group: sensu
    mode: 0640
    backup: yes
  notify:
    - restart sensu server
    - restart sensu client